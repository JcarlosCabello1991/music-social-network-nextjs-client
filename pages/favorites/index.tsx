import Head from 'next/head';
import Layout from '../../components/Layout/Layout';
import { useI18N } from '../../context/i18';
import Banner from '../../components/Banner/Banner';
import TrackList from '../../components/TrackList/TrackList';
import { useGetArtistsQuery } from '../../redux/artistAPI';
import styles from './styles.module.css';
import { useGetUserQuery } from '../../redux/userAPI';
import { useCookies } from 'react-cookie';

type Props = {};

const Favorites = (props: Props) => {
  const { t } = useI18N();
  const [cookies, setCookie, removeCookie] = useCookies([
    'userID',
    'userToken',
  ]);
  //Data para maquetar, hacer la query correcta para las liked tracks del user
  const {
    data: tracks,
    isLoading,
    isError,
  } = useGetArtistsQuery(undefined, {
    refetchOnMountOrArgChange: true,
  });
  const {
    data: userData,
    isLoading: isLoadingUser,
    isError: isErrorUser,
  } = useGetUserQuery({ id: cookies.userID, token: cookies.userToken }, {});

  console.log(userData);

  return (
    <>
      <Head>
        <title>{`${t('additional').app_name} - ${
          t('headers').headerFavorites
        }`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className={styles.container}>
          <Banner
            user={userData?.data?.username}
            total={userData?.data.likedSongs.length}
          />
          {!isLoadingUser ? (
            <TrackList
              name="Liked Songs"
              tracks={userData?.data.likedSongs}
              heightValue={35}
            />
          ) : (
            //TODO hacer un componente de loading
            <h1>Loading...</h1>
          )}
        </div>
      </Layout>
    </>
  );
};

export default Favorites;
