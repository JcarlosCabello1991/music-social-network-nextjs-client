import Layout from "../../components/Layout/Layout";
import { useContext } from "react";

import styles from "./styles.module.css";
import Head from "next/head";
import TabPanel from "../../components/TabPanel/TabPanel";
import { useRouter } from "next/router";
import { useGetPlaylistQuery } from "../../redux/playlistsAPI";
import CreatePlaylist from "../../components/Playlist/CreatePlaylist";
import Searchbar from "../../components/Playlist/Searchbar/Searchbar";
import { useI18N } from "../../context/i18";
import TrackList from "../../components/TrackList/TrackList";
import PlaylistGrid from "../../components/Playlist/PlaylistGrid/PlaylistGrid";
import { useCookies } from "react-cookie";
import { countContext } from "../../context/countContext";

const Playlist = () => {
  const { query } = useRouter();
  const { t } = useI18N();
  const [cookies, setCookie, removeCookie] = useCookies([
    "userID",
    "userToken",
  ]);

  const id = "63566ec7f9d5803a4019ed57";
  const {
    data: playlists,
    isLoading: isLoadingPlaylist,
    error: playlistError,
  } = useGetPlaylistQuery(
    { userID: cookies.userID, token: cookies.userToken },
    {
      refetchOnMountOrArgChange: true,
    }
  );
  const { userMessage } = useContext(countContext);

  return (
    <>
      <Head>
        <title>{`${t("additional").app_name} - ${t("home").playlist} ${
          userMessage === 0 ? "" : `(${userMessage})`
        }`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <CreatePlaylist />
        <PlaylistGrid />
      </Layout>
    </>
  );
};

export default Playlist;
